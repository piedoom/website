initSidebarItems({"enum":[["Anchor","Indicated where the anchor is, relative to the parent (or to the screen, if there is no parent). Follow a normal english Y,X naming."],["FontFormat","Wrapper format for all core supported Font formats"],["LineMode","How lines should behave when they are longer than the maximum line length."],["ScaleMode","Indicates if the position and margins should be calculated in pixel or relative to their parent size."],["Stretch","Indicates if a component should be stretched."],["UiEventType","The type of ui event. Click happens if you start and stop clicking on the same ui element."],["UiWidget","Loadable ui components"]],"fn":[["default_system_font","Returns the default system font."],["get_all_font_handles","Returns all the handles to the system fonts."],["get_default_font","Get the system default fonts. If unable to, gets the local square.ttf font."],["list_system_font_families","Lists all installed font families on the system."]],"struct":[["DrawUi","Draw Ui elements.  UI won't display without this.  It's recommended this be your last pass."],["FontAsset","A loaded set of fonts from a file."],["MouseReactive","A component that tags an entity as reactive to ui events. Will only work if the entity has a UiTransform component attached to it. Without this, the ui element will not generate events."],["OnUiActionImage","When this component is added to a UI element with a `UiImage` it will change that image based on mouse interaction. Requires `MouseReactive`."],["OnUiActionSound","When this component is added to a UI element it will play sounds based on mouse interaction. Requires `MouseReactive`."],["ResizeSystem","This system rearranges UI elements whenever the screen is resized using their `UiResize` component."],["TextEditing","If this component is attached to an entity with a UiText then that UiText is editable. This component also controls how that editing works."],["TtfFormat","Loads font files, supports TrueType and some OpenType files."],["UiBundle","UI bundle"],["UiButton","A clickable button, this must be paired with a `UiImage` and this entity must have a child entity with a `UiText`."],["UiButtonBuilder","Convenience structure for building a button"],["UiButtonBuilderResources","Container for all the resources the builder needs to make a new UiButton."],["UiButtonSystem","This system manages button mouse events.  It changes images and text colors, as well as playing audio when necessary."],["UiCreator","Ui Creator, wrapper around loading and creating a UI directly."],["UiEvent","A ui event instance."],["UiFinder","Utility `SystemData` for finding UI entities based on `UiTransform` id"],["UiFocused","This resource stores the currently focused UI element."],["UiFormat","Ui format."],["UiImage","A component with the texture to display in this entity's `UiTransform`"],["UiImageBuilder","Loadable `UiImage` data"],["UiKeyboardSystem","This system processes the underlying UI data as needed."],["UiLoader","Specialised UI loader"],["UiMouseSystem","The system that generates events for `MouseReactive` enabled entities. The generic types A and B represent the A and B generic parameter of the InputHandler<A,B>."],["UiResize","Whenever the window is resized the function in this component will be called on this entity's UiTransform, along with the new width and height of the window."],["UiText","A component used to display text in this entity's UiTransform"],["UiTextBuilder","Loadable `UiText` data"],["UiTransform","The UiTransform represents the transformation of a ui element. Values are in pixel and the position is calculated from the bottom left of the screen to the center of the ui element's area."],["UiTransformBuilder","Loadable `UiTransform` data. By default z is equal to one."],["UiTransformSystem","Manages the `Parent` component on entities having `UiTransform` It does almost the same as the `TransformSystem`, but with some differences, like `UiTransform` alignment and stretching."]],"type":[["FontHandle","A handle to font data stored with `amethyst_assets`."],["OtfFormat","Identical to TtfFormat."],["UiLoaderSystem","Prefab loader system for UI"],["UiPrefab","Ui prefab"]]});